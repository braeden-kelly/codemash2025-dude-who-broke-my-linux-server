Vagrant.configure("2") do |config|
  box = "debian/bullseye64"

  cpus   = 2
  memory = 1024

  config.vm.provider "virtualbox" do |vb|
    vb.cpus   = cpus
    vb.memory = memory
  end

  config.vm.provider "libvirt" do |lv|
    lv.cpus   = cpus
    lv.memory = memory
  end

  if Vagrant.has_plugin?("vagrant-vbguest")
    config.vbguest.auto_update = false
  end

  config.vm.define "team" do |team|
    team.vm.box = box

    team.vm.network "forwarded_port", guest: 8080, host: 8080, protocol: "tcp"

    team.vm.synced_folder ".", "/vagrant", disabled: true

    team.vm.provision "file", source: "./scripts", destination: "/tmp/scripts"
    team.vm.provision "file", source: "./services", destination: "/tmp/services"
    team.vm.provision "file", source: "./instructions", destination: "/tmp/instructions"
    team.vm.provision "file", source: "./app-src", destination: "/tmp/app-src"
    team.vm.provision "file", source: "./score-server", destination: "/tmp/score-server"

    team.vm.provision "shell",
      inline: <<-SCRIPT
        bash /tmp/scripts/init.sh
        bats -F pretty /.ws/scripts/test.bats
      SCRIPT
  end

  config.vm.define "db" do |db|
    db.vm.box = box

    db.vm.network "private_network", ip: "10.0.1.10" # needs to be static
    db.vm.network "forwarded_port", guest: 5432, host: 5432, protocol: "tcp"

    db.vm.synced_folder ".", "/vagrant", disabled: true

    db.vm.provision "file", source: "./scripts", destination: "/tmp/scripts"

    db.vm.provision "shell",
      inline: <<-SCRIPT
        bash /tmp/scripts/init-db.sh
      SCRIPT
  end
end
