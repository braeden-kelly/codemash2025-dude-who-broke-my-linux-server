# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import employees_pb2 as employees_dot_v1_dot_employees__pb2


class EmployeesServiceStub(object):
  """Service that shows a few ways to work with protobufs and gRPC
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetRecord = channel.unary_unary(
        '/employees.v1.EmployeesService/GetRecord',
        request_serializer=employees_dot_v1_dot_employees__pb2.GetRecordRequest.SerializeToString,
        response_deserializer=employees_dot_v1_dot_employees__pb2.GetRecordResponse.FromString,
        )


class EmployeesServiceServicer(object):
  """Service that shows a few ways to work with protobufs and gRPC
  """

  def GetRecord(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_EmployeesServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetRecord': grpc.unary_unary_rpc_method_handler(
          servicer.GetRecord,
          request_deserializer=employees_dot_v1_dot_employees__pb2.GetRecordRequest.FromString,
          response_serializer=employees_dot_v1_dot_employees__pb2.GetRecordResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'employees.v1.EmployeesService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
